name: Build and Deploy Golang Image to EC2
on:
  pull_request:
    branches: [ main ]
    types: [closed]

jobs:
  build-and-deploy:
    name: Build and Deploy to EC2
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build Docker image
      id: build-image
      run: |
        docker build -t my_golang_image:latest .

    - name: Save Docker image as a tar file
      run: |
        docker save my_golang_image:latest -o my_golang_image.tar

    - name: Transfer Docker image to EC2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
        chmod 400 ec2_key.pem
        scp -o StrictHostKeyChecking=no -i ec2_key.pem my_golang_image.tar $EC2_USER@$EC2_HOST:~/

    - name: Load and run Docker image on EC2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          docker load -i my_golang_image.tar
          docker stop my_running_container || true
          docker rm my_running_container || true
          docker run -d --name my_running_container my_golang_image:latest
        EOF

    - name: Clean up
      run: |
        rm -f ec2_key.pem
        rm -f my_golang_image.tar
